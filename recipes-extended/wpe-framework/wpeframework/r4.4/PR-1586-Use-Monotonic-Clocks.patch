From: Karunakaran Amirthalingam
Date: Wed 29 May 2024 11:29:47 +0000
Subject: [PATCH] PR-1586-Use-Monotonic-Clocks.patch-  Use CLOCK_MONOTONIC for all the mutex and semaphores instead of CLOCK_REALTIME
Upstream-Status: YES
Signed-off-by: <karunakaran_amirthalingam@cable.comcast.com>
---
diff --git a/Source/core/SharedBuffer.cpp b/Source/core/SharedBuffer.cpp
index e21e154e..deff147e 100644
--- a/Source/core/SharedBuffer.cpp
+++ b/Source/core/SharedBuffer.cpp
@@ -104,7 +104,11 @@ namespace Core {

         struct timespec structTime;

+#if (__GLIBC__ >= 2) && (__GLIBC_MINOR__ > 30)
+        clock_gettime(CLOCK_MONOTONIC, &structTime);
+#else
         clock_gettime(CLOCK_REALTIME, &structTime);
+#endif
         structTime.tv_nsec += ((waitTime % 1000) * 1000 * 1000); /* remainder, milliseconds to nanoseconds */
         structTime.tv_sec += (waitTime / 1000) + (structTime.tv_nsec / 1000000000); /* milliseconds to seconds */
         structTime.tv_nsec = structTime.tv_nsec % 1000000000;
@@ -112,7 +116,11 @@ namespace Core {
         // MF2018 please note: sem_timedwait is not compatible with CLOCK_MONOTONIC.
         //                     When used with CLOCK_REALTIME do not use this when the system time can make large jumps (so when Time subsystem is not yet up)
         do {
+#if (__GLIBC__ >= 2) && (__GLIBC_MINOR__ > 30)
+            if (sem_clockwait(_semaphore, CLOCK_MONOTONIC, &structTime) == 0) {
+#else
             if (sem_timedwait(_semaphore, &structTime) == 0) {
+#endif
                 result = Core::ERROR_NONE;
             }
             else if ( errno == EINTR ) {
diff --git a/Source/core/Sync.cpp b/Source/core/Sync.cpp
index 03ffc214..90fc5002 100644
--- a/Source/core/Sync.cpp
+++ b/Source/core/Sync.cpp
@@ -176,7 +176,7 @@ namespace Core {
         const int nTimeSecs = 5;
         timespec structTime;

-        clock_gettime(CLOCK_REALTIME, &structTime);
+        clock_gettime(CLOCK_MONOTONIC, &structTime);
         structTime.tv_sec += nTimeSecs;

         // MF2018 please note: sem_timedwait is not compatible with CLOCK_MONOTONIC.
diff --git a/Source/core/CyclicBuffer.cpp b/Source/core/CyclicBuffer.cpp
index c939d7c6..827eff9a 100644
--- a/Source/core/CyclicBuffer.cpp
+++ b/Source/core/CyclicBuffer.cpp
@@ -193,7 +193,7 @@ namespace Core {
 #ifdef __POSIX__
             struct timespec structTime;

-            clock_gettime(CLOCK_REALTIME, &structTime);
+            clock_gettime(CLOCK_MONOTONIC, &structTime);

             structTime.tv_nsec += ((waitTime % 1000) * 1000 * 1000); /* remainder, milliseconds to nanoseconds */
             structTime.tv_sec += (waitTime / 1000); // + (structTime.tv_nsec / 1000000000); /* milliseconds to seconds */
@@ -202,7 +202,7 @@ namespace Core {
             if (pthread_cond_timedwait(&(_administration->_signal), &(_administration->_mutex), &structTime) != 0) {
                 struct timespec nowTime;

-                clock_gettime(CLOCK_REALTIME, &nowTime);
+                clock_gettime(CLOCK_MONOTONIC, &nowTime);
                 if (nowTime.tv_nsec > structTime.tv_nsec) {

                     result = (nowTime.tv_sec - structTime.tv_sec) * 1000 + ((nowTime.tv_nsec - structTime.tv_nsec) / 1000000);

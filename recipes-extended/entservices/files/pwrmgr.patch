diff --git a/PowerManager/CMakeLists.txt b/PowerManager/CMakeLists.txt
index 9122249..9eebded 100644
--- a/PowerManager/CMakeLists.txt
+++ b/PowerManager/CMakeLists.txt
@@ -28,6 +28,9 @@ find_package(${NAMESPACE}Plugins REQUIRED)
 find_package(${NAMESPACE}Definitions REQUIRED)
 find_package(CompileSettingsDebug CONFIG REQUIRED)
 find_library(PROCPS_LIBRARIES NAMES procps)
+find_library(POWER_HAL_LIB NAMES iarmmgrs-power-hal)
+find_library(DEEPSLEEP_HAL_LIB NAMES iarmmgrs-deepsleep-hal)
+find_package(RFC)
 
 add_library(${MODULE_NAME} SHARED
     PowerManager.cpp
@@ -77,7 +80,8 @@ if (DS_FOUND)
     add_definitions(-DDS_FOUND)
     target_include_directories(${PLUGIN_IMPLEMENTATION} PRIVATE ${IARMBUS_INCLUDE_DIRS})
     target_include_directories(${PLUGIN_IMPLEMENTATION} PRIVATE ${DS_INCLUDE_DIRS})
-    target_link_libraries(${PLUGIN_IMPLEMENTATION} PRIVATE ${NAMESPACE}Plugins::${NAMESPACE}Plugins ${IARMBUS_LIBRARIES} ${DS_LIBRARIES})
+    target_include_directories(${PLUGIN_IMPLEMENTATION} PRIVATE ${RFC_INCLUDE_DIRS})
+    target_link_libraries(${PLUGIN_IMPLEMENTATION} PRIVATE ${NAMESPACE}Plugins::${NAMESPACE}Plugins ${IARMBUS_LIBRARIES} ${DS_LIBRARIES} ${RFC_LIBRARIES} ${POWER_HAL_LIB} ${DEEPSLEEP_HAL_LIB})
 else (DS_FOUND)
     target_link_libraries(${PLUGIN_IMPLEMENTATION} PRIVATE ${NAMESPACE}Plugins::${NAMESPACE}Plugins)
 endif(DS_FOUND)
diff --git a/PowerManager/PowerManagerImplementation.cpp b/PowerManager/PowerManagerImplementation.cpp
index b93d172..65b822c 100644
--- a/PowerManager/PowerManagerImplementation.cpp
+++ b/PowerManager/PowerManagerImplementation.cpp
@@ -23,6 +23,8 @@
 #include "UtilsLogging.h"
 
 #include "rdk/iarmmgrs-hal/pwrMgr.h"
+#include "libIBusDaemon.h"
+#include "rdk/halif/power-manager/plat_power.h"
 
 #define STANDBY_REASON_FILE "/opt/standbyReason.txt"
 #define IARM_BUS_PWRMGR_API_SetDeepSleepTimeOut "SetDeepSleepTimeOut" /*!< Sets the timeout for deep sleep*/
@@ -579,7 +581,10 @@ namespace Plugin {
         uint32_t errorCode = Core::ERROR_GENERAL;
         IARM_Bus_PWRMgr_GetPowerState_Param_t param = {};
 
-        LOGINFO("impl called for GetPowerState()");
+        PWRMgr_PowerState_t state;
+        int ret = PLAT_API_GetPowerState(&state);
+
+        LOGINFO("impl called for GetPowerState(%u)ret: %d",state,ret);
         IARM_Result_t res = IARM_Bus_Call(IARM_BUS_PWRMGR_NAME, IARM_BUS_PWRMGR_API_GetPowerState,
             (void*)&param, sizeof(param));
 
